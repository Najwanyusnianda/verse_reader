// lib/src/routing/app_router.dart

import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:go_router/go_router.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';

// Import screens
import 'package:verse_reader/src/features/library/presentation/screens/library_home_screen.dart';

// This file is generated by Riverpod to provide the necessary provider code
part 'app_router.g.dart';

/// A Riverpod provider that manages the app's routing configuration.
///
/// This provider uses `go_router` for declarative routing in the app.
/// It's marked with `keepAlive: true` to maintain the router's state across rebuilds.
///
/// The router is configured with:
/// - An initial route of '/library'
/// - Named routes for each screen in the app
@Riverpod(keepAlive: true)
GoRouter goRouter(Ref ref) {
  return GoRouter(
    // The initial route when the app starts
    initialLocation: '/library',
    
    // Define all the routes in the app
    routes: [
      // Library home screen - the main screen for browsing books
      GoRoute(
        path: '/library',
        name: 'library',
        builder: (context, state) => const LibraryHomeScreen(),
      ),
      
      // Additional routes will be added here as the app grows
      // Example:
      // GoRoute(
      //   path: '/book/:id',
      //   name: 'book',
      //   builder: (context, state) {
      //     final bookId = state.pathParameters['id']!;
      //     return BookDetailsScreen(bookId: bookId);
      //   },
      // ),
    ],
    
    // Optional: Add error handling for unknown routes
    // errorBuilder: (context, state) => const NotFoundScreen(),
  );
}
